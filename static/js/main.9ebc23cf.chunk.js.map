{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","this","props","images","step","frameSize","itemWidth","animationDuration","infinite","moveLimit","length","className","type","onClick","setState","Math","max","disabled","style","width","transform","transition","map","image","index","maxWidth","minWidth","src","alt","toString","min","React","Component","App","handleSettings","event","target","name","value","htmlFor","defaultValue","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ebc23cf.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  position: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const moveLimit = -((images.length * itemWidth) - (itemWidth * frameSize));\n\n    const moveNext = () => {\n      if ((position === images.length - frameSize) && infinite) {\n        this.setState({\n          position: 0,\n        });\n      } else {\n        this.setState({\n          position: Math.min(position + step, images.length - frameSize),\n        });\n      }\n    };\n\n    const movePrev = () => {\n      if (position === 0 && infinite) {\n        this.setState({\n          position: images.length - frameSize,\n        });\n      } else {\n        this.setState({\n          position: Math.max(position - step, 0),\n        });\n      }\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          className=\"Carousel__button Carousel__button--prev\"\n          type=\"button\"\n          onClick={movePrev}\n          disabled={position === 0 && !infinite}\n          aria-label=\"Prev\"\n        />\n\n        <div\n          className=\"Carousel__container\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__container--list\"\n            style={{\n              transform: `translateX(${\n                (-position * itemWidth) >= moveLimit\n                  ? -position * itemWidth\n                  : moveLimit\n              }px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            {images.map((image, index) => (\n              <li\n                key={image}\n                className=\"Carousel__item\"\n                style={{\n                  maxWidth: `${itemWidth}px`,\n                  minWidth: `${itemWidth}px`,\n                }}\n              >\n                <img\n                  className=\"Carousel__image\"\n                  src={image}\n                  alt={`Emoji ${index.toString()}`}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          className=\"Carousel__button Carousel__button--next\"\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={moveNext}\n          disabled={position + frameSize >= images.length && !infinite}\n          aria-label=\"Next\"\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleSettings = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState((state) => ({\n      ...state,\n      [event.target.name]: +event.target.value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          data-cy=\"title\"\n          className=\"App__title\"\n        >\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n\n        <form className=\"App__form\">\n          <label htmlFor=\"step\" className=\"App__label\">\n            <h3 className=\"App__title\">Step:</h3>\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              name=\"step\"\n              defaultValue={step}\n              onChange={this.handleSettings}\n              min=\"1\"\n              max={images.length}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frameSize\"\n            className=\"App__label\"\n          >\n            <h3 className=\"App__title\">Frame Size:</h3>\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              name=\"frameSize\"\n              defaultValue={frameSize}\n              min=\"1\"\n              max={images.length}\n              onChange={this.handleSettings}\n            />\n          </label>\n\n          <label\n            htmlFor=\"itemWidth\"\n            className=\"App__label\"\n          >\n            <h3 className=\"App__title\">Item Width:</h3>\n            <input\n              type=\"number\"\n              className=\"App__input App__input--itemWidth\"\n              name=\"itemWidth\"\n              defaultValue={itemWidth}\n              min=\"50\"\n              max=\"250\"\n              onChange={this.handleSettings}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animationDuration\"\n            className=\"App__label\"\n          >\n            <h3 className=\"App__title\">Animation Duration:</h3>\n            <input\n              type=\"number\"\n              className=\"App__input App__input--animDurat\"\n              defaultValue={animationDuration}\n              name=\"animationDuration\"\n              min=\"0\"\n              onChange={this.handleSettings}\n            />\n          </label>\n\n          <label\n            htmlFor=\"infinite\"\n            className=\"App__label\"\n          >\n            <h3 className=\"App__title\">Infinite:</h3>\n            <input\n              type=\"checkbox\"\n              className=\"App__input App__input--infinite\"\n              name=\"infinite\"\n              onChange={() => (\n                this.setState({ infinite: !infinite })\n              )}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}